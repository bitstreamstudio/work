// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: seqsvr.proto

#ifndef PROTOBUF_seqsvr_2eproto__INCLUDED
#define PROTOBUF_seqsvr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace zproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_seqsvr_2eproto();
void protobuf_InitDefaults_seqsvr_2eproto();
void protobuf_AssignDesc_seqsvr_2eproto();
void protobuf_ShutdownFile_seqsvr_2eproto();

class AllocSvrEntry;
class FetchNextSequenceListReq;
class FetchNextSequenceReq;
class GetCurrentSequenceListReq;
class GetCurrentSequenceReq;
class GetRouteTableReq;
class GetRouteTableRsp;
class IdSeq;
class IpPort;
class LoadMaxSeqsDataReq;
class LoadMaxSeqsDataRsp;
class Range;
class Router;
class SaveMaxSeqReq;
class SaveMaxSeqRsp;
class SequenceListRsp;
class SequenceRsp;
class SetEntry;
class UpdateRouteTableReq;
class UpdateRouteTableRsp;

// ===================================================================

class IpPort : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.IpPort) */ {
 public:
  IpPort();
  virtual ~IpPort();

  IpPort(const IpPort& from);

  inline IpPort& operator=(const IpPort& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IpPort& default_instance();

  static const IpPort* internal_default_instance();

  void Swap(IpPort* other);

  // implements Message ----------------------------------------------

  inline IpPort* New() const { return New(NULL); }

  IpPort* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IpPort* other);
  void UnsafeMergeFrom(const IpPort& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 1;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional uint32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.IpPort)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::uint32 port_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IpPort> IpPort_default_instance_;

// -------------------------------------------------------------------

class Range : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Range) */ {
 public:
  Range();
  virtual ~Range();

  Range(const Range& from);

  inline Range& operator=(const Range& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Range& default_instance();

  static const Range* internal_default_instance();

  void Swap(Range* other);

  // implements Message ----------------------------------------------

  inline Range* New() const { return New(NULL); }

  Range* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Range* other);
  void UnsafeMergeFrom(const Range& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.Range)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Range> Range_default_instance_;

// -------------------------------------------------------------------

class AllocSvrEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.AllocSvrEntry) */ {
 public:
  AllocSvrEntry();
  virtual ~AllocSvrEntry();

  AllocSvrEntry(const AllocSvrEntry& from);

  inline AllocSvrEntry& operator=(const AllocSvrEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocSvrEntry& default_instance();

  static const AllocSvrEntry* internal_default_instance();

  void Swap(AllocSvrEntry* other);

  // implements Message ----------------------------------------------

  inline AllocSvrEntry* New() const { return New(NULL); }

  AllocSvrEntry* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AllocSvrEntry* other);
  void UnsafeMergeFrom(const AllocSvrEntry& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string alloc_name = 1;
  void clear_alloc_name();
  static const int kAllocNameFieldNumber = 1;
  const ::std::string& alloc_name() const;
  void set_alloc_name(const ::std::string& value);
  void set_alloc_name(const char* value);
  void set_alloc_name(const char* value, size_t size);
  ::std::string* mutable_alloc_name();
  ::std::string* release_alloc_name();
  void set_allocated_alloc_name(::std::string* alloc_name);

  // optional .zproto.IpPort addr = 2;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 2;
  const ::zproto::IpPort& addr() const;
  ::zproto::IpPort* mutable_addr();
  ::zproto::IpPort* release_addr();
  void set_allocated_addr(::zproto::IpPort* addr);

  // repeated .zproto.Range ranges = 3;
  int ranges_size() const;
  void clear_ranges();
  static const int kRangesFieldNumber = 3;
  const ::zproto::Range& ranges(int index) const;
  ::zproto::Range* mutable_ranges(int index);
  ::zproto::Range* add_ranges();
  ::google::protobuf::RepeatedPtrField< ::zproto::Range >*
      mutable_ranges();
  const ::google::protobuf::RepeatedPtrField< ::zproto::Range >&
      ranges() const;

  // @@protoc_insertion_point(class_scope:zproto.AllocSvrEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::Range > ranges_;
  ::google::protobuf::internal::ArenaStringPtr alloc_name_;
  ::zproto::IpPort* addr_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AllocSvrEntry> AllocSvrEntry_default_instance_;

// -------------------------------------------------------------------

class SetEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SetEntry) */ {
 public:
  SetEntry();
  virtual ~SetEntry();

  SetEntry(const SetEntry& from);

  inline SetEntry& operator=(const SetEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetEntry& default_instance();

  static const SetEntry* internal_default_instance();

  void Swap(SetEntry* other);

  // implements Message ----------------------------------------------

  inline SetEntry* New() const { return New(NULL); }

  SetEntry* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetEntry* other);
  void UnsafeMergeFrom(const SetEntry& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string set_name = 1;
  void clear_set_name();
  static const int kSetNameFieldNumber = 1;
  const ::std::string& set_name() const;
  void set_set_name(const ::std::string& value);
  void set_set_name(const char* value);
  void set_set_name(const char* value, size_t size);
  ::std::string* mutable_set_name();
  ::std::string* release_set_name();
  void set_allocated_set_name(::std::string* set_name);

  // repeated .zproto.AllocSvrEntry allocs = 2;
  int allocs_size() const;
  void clear_allocs();
  static const int kAllocsFieldNumber = 2;
  const ::zproto::AllocSvrEntry& allocs(int index) const;
  ::zproto::AllocSvrEntry* mutable_allocs(int index);
  ::zproto::AllocSvrEntry* add_allocs();
  ::google::protobuf::RepeatedPtrField< ::zproto::AllocSvrEntry >*
      mutable_allocs();
  const ::google::protobuf::RepeatedPtrField< ::zproto::AllocSvrEntry >&
      allocs() const;

  // optional .zproto.Range range = 3;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 3;
  const ::zproto::Range& range() const;
  ::zproto::Range* mutable_range();
  ::zproto::Range* release_range();
  void set_allocated_range(::zproto::Range* range);

  // @@protoc_insertion_point(class_scope:zproto.SetEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::AllocSvrEntry > allocs_;
  ::google::protobuf::internal::ArenaStringPtr set_name_;
  ::zproto::Range* range_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SetEntry> SetEntry_default_instance_;

// -------------------------------------------------------------------

class Router : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Router) */ {
 public:
  Router();
  virtual ~Router();

  Router(const Router& from);

  inline Router& operator=(const Router& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Router& default_instance();

  static const Router* internal_default_instance();

  void Swap(Router* other);

  // implements Message ----------------------------------------------

  inline Router* New() const { return New(NULL); }

  Router* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Router* other);
  void UnsafeMergeFrom(const Router& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // repeated .zproto.SetEntry sets = 2;
  int sets_size() const;
  void clear_sets();
  static const int kSetsFieldNumber = 2;
  const ::zproto::SetEntry& sets(int index) const;
  ::zproto::SetEntry* mutable_sets(int index);
  ::zproto::SetEntry* add_sets();
  ::google::protobuf::RepeatedPtrField< ::zproto::SetEntry >*
      mutable_sets();
  const ::google::protobuf::RepeatedPtrField< ::zproto::SetEntry >&
      sets() const;

  // @@protoc_insertion_point(class_scope:zproto.Router)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::SetEntry > sets_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Router> Router_default_instance_;

// -------------------------------------------------------------------

class UpdateRouteTableReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.UpdateRouteTableReq) */ {
 public:
  UpdateRouteTableReq();
  virtual ~UpdateRouteTableReq();

  UpdateRouteTableReq(const UpdateRouteTableReq& from);

  inline UpdateRouteTableReq& operator=(const UpdateRouteTableReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRouteTableReq& default_instance();

  static const UpdateRouteTableReq* internal_default_instance();

  void Swap(UpdateRouteTableReq* other);

  // implements Message ----------------------------------------------

  inline UpdateRouteTableReq* New() const { return New(NULL); }

  UpdateRouteTableReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateRouteTableReq* other);
  void UnsafeMergeFrom(const UpdateRouteTableReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .zproto.Router router = 1;
  bool has_router() const;
  void clear_router();
  static const int kRouterFieldNumber = 1;
  const ::zproto::Router& router() const;
  ::zproto::Router* mutable_router();
  ::zproto::Router* release_router();
  void set_allocated_router(::zproto::Router* router);

  // @@protoc_insertion_point(class_scope:zproto.UpdateRouteTableReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zproto::Router* router_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdateRouteTableReq> UpdateRouteTableReq_default_instance_;

// -------------------------------------------------------------------

class UpdateRouteTableRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.UpdateRouteTableRsp) */ {
 public:
  UpdateRouteTableRsp();
  virtual ~UpdateRouteTableRsp();

  UpdateRouteTableRsp(const UpdateRouteTableRsp& from);

  inline UpdateRouteTableRsp& operator=(const UpdateRouteTableRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRouteTableRsp& default_instance();

  static const UpdateRouteTableRsp* internal_default_instance();

  void Swap(UpdateRouteTableRsp* other);

  // implements Message ----------------------------------------------

  inline UpdateRouteTableRsp* New() const { return New(NULL); }

  UpdateRouteTableRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateRouteTableRsp* other);
  void UnsafeMergeFrom(const UpdateRouteTableRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.UpdateRouteTableRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdateRouteTableRsp> UpdateRouteTableRsp_default_instance_;

// -------------------------------------------------------------------

class GetRouteTableReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.GetRouteTableReq) */ {
 public:
  GetRouteTableReq();
  virtual ~GetRouteTableReq();

  GetRouteTableReq(const GetRouteTableReq& from);

  inline GetRouteTableReq& operator=(const GetRouteTableReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRouteTableReq& default_instance();

  static const GetRouteTableReq* internal_default_instance();

  void Swap(GetRouteTableReq* other);

  // implements Message ----------------------------------------------

  inline GetRouteTableReq* New() const { return New(NULL); }

  GetRouteTableReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRouteTableReq* other);
  void UnsafeMergeFrom(const GetRouteTableReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.GetRouteTableReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetRouteTableReq> GetRouteTableReq_default_instance_;

// -------------------------------------------------------------------

class GetRouteTableRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.GetRouteTableRsp) */ {
 public:
  GetRouteTableRsp();
  virtual ~GetRouteTableRsp();

  GetRouteTableRsp(const GetRouteTableRsp& from);

  inline GetRouteTableRsp& operator=(const GetRouteTableRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRouteTableRsp& default_instance();

  static const GetRouteTableRsp* internal_default_instance();

  void Swap(GetRouteTableRsp* other);

  // implements Message ----------------------------------------------

  inline GetRouteTableRsp* New() const { return New(NULL); }

  GetRouteTableRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRouteTableRsp* other);
  void UnsafeMergeFrom(const GetRouteTableRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .zproto.Router router = 1;
  bool has_router() const;
  void clear_router();
  static const int kRouterFieldNumber = 1;
  const ::zproto::Router& router() const;
  ::zproto::Router* mutable_router();
  ::zproto::Router* release_router();
  void set_allocated_router(::zproto::Router* router);

  // @@protoc_insertion_point(class_scope:zproto.GetRouteTableRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zproto::Router* router_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetRouteTableRsp> GetRouteTableRsp_default_instance_;

// -------------------------------------------------------------------

class FetchNextSequenceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.FetchNextSequenceReq) */ {
 public:
  FetchNextSequenceReq();
  virtual ~FetchNextSequenceReq();

  FetchNextSequenceReq(const FetchNextSequenceReq& from);

  inline FetchNextSequenceReq& operator=(const FetchNextSequenceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchNextSequenceReq& default_instance();

  static const FetchNextSequenceReq* internal_default_instance();

  void Swap(FetchNextSequenceReq* other);

  // implements Message ----------------------------------------------

  inline FetchNextSequenceReq* New() const { return New(NULL); }

  FetchNextSequenceReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FetchNextSequenceReq* other);
  void UnsafeMergeFrom(const FetchNextSequenceReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.FetchNextSequenceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FetchNextSequenceReq> FetchNextSequenceReq_default_instance_;

// -------------------------------------------------------------------

class GetCurrentSequenceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.GetCurrentSequenceReq) */ {
 public:
  GetCurrentSequenceReq();
  virtual ~GetCurrentSequenceReq();

  GetCurrentSequenceReq(const GetCurrentSequenceReq& from);

  inline GetCurrentSequenceReq& operator=(const GetCurrentSequenceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCurrentSequenceReq& default_instance();

  static const GetCurrentSequenceReq* internal_default_instance();

  void Swap(GetCurrentSequenceReq* other);

  // implements Message ----------------------------------------------

  inline GetCurrentSequenceReq* New() const { return New(NULL); }

  GetCurrentSequenceReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetCurrentSequenceReq* other);
  void UnsafeMergeFrom(const GetCurrentSequenceReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.GetCurrentSequenceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetCurrentSequenceReq> GetCurrentSequenceReq_default_instance_;

// -------------------------------------------------------------------

class SequenceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SequenceRsp) */ {
 public:
  SequenceRsp();
  virtual ~SequenceRsp();

  SequenceRsp(const SequenceRsp& from);

  inline SequenceRsp& operator=(const SequenceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SequenceRsp& default_instance();

  static const SequenceRsp* internal_default_instance();

  void Swap(SequenceRsp* other);

  // implements Message ----------------------------------------------

  inline SequenceRsp* New() const { return New(NULL); }

  SequenceRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SequenceRsp* other);
  void UnsafeMergeFrom(const SequenceRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 sequence = 2;
  void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  ::google::protobuf::uint64 sequence() const;
  void set_sequence(::google::protobuf::uint64 value);

  // optional .zproto.Router router = 3;
  bool has_router() const;
  void clear_router();
  static const int kRouterFieldNumber = 3;
  const ::zproto::Router& router() const;
  ::zproto::Router* mutable_router();
  ::zproto::Router* release_router();
  void set_allocated_router(::zproto::Router* router);

  // @@protoc_insertion_point(class_scope:zproto.SequenceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zproto::Router* router_;
  ::google::protobuf::uint64 sequence_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SequenceRsp> SequenceRsp_default_instance_;

// -------------------------------------------------------------------

class FetchNextSequenceListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.FetchNextSequenceListReq) */ {
 public:
  FetchNextSequenceListReq();
  virtual ~FetchNextSequenceListReq();

  FetchNextSequenceListReq(const FetchNextSequenceListReq& from);

  inline FetchNextSequenceListReq& operator=(const FetchNextSequenceListReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchNextSequenceListReq& default_instance();

  static const FetchNextSequenceListReq* internal_default_instance();

  void Swap(FetchNextSequenceListReq* other);

  // implements Message ----------------------------------------------

  inline FetchNextSequenceListReq* New() const { return New(NULL); }

  FetchNextSequenceListReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FetchNextSequenceListReq* other);
  void UnsafeMergeFrom(const FetchNextSequenceListReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id_list = 1;
  int id_list_size() const;
  void clear_id_list();
  static const int kIdListFieldNumber = 1;
  ::google::protobuf::uint32 id_list(int index) const;
  void set_id_list(int index, ::google::protobuf::uint32 value);
  void add_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id_list();

  // @@protoc_insertion_point(class_scope:zproto.FetchNextSequenceListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_list_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FetchNextSequenceListReq> FetchNextSequenceListReq_default_instance_;

// -------------------------------------------------------------------

class GetCurrentSequenceListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.GetCurrentSequenceListReq) */ {
 public:
  GetCurrentSequenceListReq();
  virtual ~GetCurrentSequenceListReq();

  GetCurrentSequenceListReq(const GetCurrentSequenceListReq& from);

  inline GetCurrentSequenceListReq& operator=(const GetCurrentSequenceListReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCurrentSequenceListReq& default_instance();

  static const GetCurrentSequenceListReq* internal_default_instance();

  void Swap(GetCurrentSequenceListReq* other);

  // implements Message ----------------------------------------------

  inline GetCurrentSequenceListReq* New() const { return New(NULL); }

  GetCurrentSequenceListReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetCurrentSequenceListReq* other);
  void UnsafeMergeFrom(const GetCurrentSequenceListReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id_list = 1;
  int id_list_size() const;
  void clear_id_list();
  static const int kIdListFieldNumber = 1;
  ::google::protobuf::uint32 id_list(int index) const;
  void set_id_list(int index, ::google::protobuf::uint32 value);
  void add_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id_list();

  // @@protoc_insertion_point(class_scope:zproto.GetCurrentSequenceListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_list_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetCurrentSequenceListReq> GetCurrentSequenceListReq_default_instance_;

// -------------------------------------------------------------------

class IdSeq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.IdSeq) */ {
 public:
  IdSeq();
  virtual ~IdSeq();

  IdSeq(const IdSeq& from);

  inline IdSeq& operator=(const IdSeq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IdSeq& default_instance();

  static const IdSeq* internal_default_instance();

  void Swap(IdSeq* other);

  // implements Message ----------------------------------------------

  inline IdSeq* New() const { return New(NULL); }

  IdSeq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IdSeq* other);
  void UnsafeMergeFrom(const IdSeq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint64 sequence = 2;
  void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  ::google::protobuf::uint64 sequence() const;
  void set_sequence(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.IdSeq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 sequence_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IdSeq> IdSeq_default_instance_;

// -------------------------------------------------------------------

class SequenceListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SequenceListRsp) */ {
 public:
  SequenceListRsp();
  virtual ~SequenceListRsp();

  SequenceListRsp(const SequenceListRsp& from);

  inline SequenceListRsp& operator=(const SequenceListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SequenceListRsp& default_instance();

  static const SequenceListRsp* internal_default_instance();

  void Swap(SequenceListRsp* other);

  // implements Message ----------------------------------------------

  inline SequenceListRsp* New() const { return New(NULL); }

  SequenceListRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SequenceListRsp* other);
  void UnsafeMergeFrom(const SequenceListRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.IdSeq sequence_list = 1;
  int sequence_list_size() const;
  void clear_sequence_list();
  static const int kSequenceListFieldNumber = 1;
  const ::zproto::IdSeq& sequence_list(int index) const;
  ::zproto::IdSeq* mutable_sequence_list(int index);
  ::zproto::IdSeq* add_sequence_list();
  ::google::protobuf::RepeatedPtrField< ::zproto::IdSeq >*
      mutable_sequence_list();
  const ::google::protobuf::RepeatedPtrField< ::zproto::IdSeq >&
      sequence_list() const;

  // @@protoc_insertion_point(class_scope:zproto.SequenceListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::IdSeq > sequence_list_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SequenceListRsp> SequenceListRsp_default_instance_;

// -------------------------------------------------------------------

class LoadMaxSeqsDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadMaxSeqsDataReq) */ {
 public:
  LoadMaxSeqsDataReq();
  virtual ~LoadMaxSeqsDataReq();

  LoadMaxSeqsDataReq(const LoadMaxSeqsDataReq& from);

  inline LoadMaxSeqsDataReq& operator=(const LoadMaxSeqsDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadMaxSeqsDataReq& default_instance();

  static const LoadMaxSeqsDataReq* internal_default_instance();

  void Swap(LoadMaxSeqsDataReq* other);

  // implements Message ----------------------------------------------

  inline LoadMaxSeqsDataReq* New() const { return New(NULL); }

  LoadMaxSeqsDataReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoadMaxSeqsDataReq* other);
  void UnsafeMergeFrom(const LoadMaxSeqsDataReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.LoadMaxSeqsDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoadMaxSeqsDataReq> LoadMaxSeqsDataReq_default_instance_;

// -------------------------------------------------------------------

class LoadMaxSeqsDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadMaxSeqsDataRsp) */ {
 public:
  LoadMaxSeqsDataRsp();
  virtual ~LoadMaxSeqsDataRsp();

  LoadMaxSeqsDataRsp(const LoadMaxSeqsDataRsp& from);

  inline LoadMaxSeqsDataRsp& operator=(const LoadMaxSeqsDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadMaxSeqsDataRsp& default_instance();

  static const LoadMaxSeqsDataRsp* internal_default_instance();

  void Swap(LoadMaxSeqsDataRsp* other);

  // implements Message ----------------------------------------------

  inline LoadMaxSeqsDataRsp* New() const { return New(NULL); }

  LoadMaxSeqsDataRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoadMaxSeqsDataRsp* other);
  void UnsafeMergeFrom(const LoadMaxSeqsDataRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes max_seqs = 1;
  void clear_max_seqs();
  static const int kMaxSeqsFieldNumber = 1;
  const ::std::string& max_seqs() const;
  void set_max_seqs(const ::std::string& value);
  void set_max_seqs(const char* value);
  void set_max_seqs(const void* value, size_t size);
  ::std::string* mutable_max_seqs();
  ::std::string* release_max_seqs();
  void set_allocated_max_seqs(::std::string* max_seqs);

  // @@protoc_insertion_point(class_scope:zproto.LoadMaxSeqsDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr max_seqs_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoadMaxSeqsDataRsp> LoadMaxSeqsDataRsp_default_instance_;

// -------------------------------------------------------------------

class SaveMaxSeqReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SaveMaxSeqReq) */ {
 public:
  SaveMaxSeqReq();
  virtual ~SaveMaxSeqReq();

  SaveMaxSeqReq(const SaveMaxSeqReq& from);

  inline SaveMaxSeqReq& operator=(const SaveMaxSeqReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveMaxSeqReq& default_instance();

  static const SaveMaxSeqReq* internal_default_instance();

  void Swap(SaveMaxSeqReq* other);

  // implements Message ----------------------------------------------

  inline SaveMaxSeqReq* New() const { return New(NULL); }

  SaveMaxSeqReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SaveMaxSeqReq* other);
  void UnsafeMergeFrom(const SaveMaxSeqReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 section_id = 3;
  void clear_section_id();
  static const int kSectionIdFieldNumber = 3;
  ::google::protobuf::uint32 section_id() const;
  void set_section_id(::google::protobuf::uint32 value);

  // optional uint64 max_seq = 4;
  void clear_max_seq();
  static const int kMaxSeqFieldNumber = 4;
  ::google::protobuf::uint64 max_seq() const;
  void set_max_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.SaveMaxSeqReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 max_seq_;
  ::google::protobuf::uint32 section_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SaveMaxSeqReq> SaveMaxSeqReq_default_instance_;

// -------------------------------------------------------------------

class SaveMaxSeqRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SaveMaxSeqRsp) */ {
 public:
  SaveMaxSeqRsp();
  virtual ~SaveMaxSeqRsp();

  SaveMaxSeqRsp(const SaveMaxSeqRsp& from);

  inline SaveMaxSeqRsp& operator=(const SaveMaxSeqRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveMaxSeqRsp& default_instance();

  static const SaveMaxSeqRsp* internal_default_instance();

  void Swap(SaveMaxSeqRsp* other);

  // implements Message ----------------------------------------------

  inline SaveMaxSeqRsp* New() const { return New(NULL); }

  SaveMaxSeqRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SaveMaxSeqRsp* other);
  void UnsafeMergeFrom(const SaveMaxSeqRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 last_max_seq = 1;
  void clear_last_max_seq();
  static const int kLastMaxSeqFieldNumber = 1;
  ::google::protobuf::uint64 last_max_seq() const;
  void set_last_max_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.SaveMaxSeqRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 last_max_seq_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_seqsvr_2eproto_impl();
  friend void  protobuf_AddDesc_seqsvr_2eproto_impl();
  friend void protobuf_AssignDesc_seqsvr_2eproto();
  friend void protobuf_ShutdownFile_seqsvr_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SaveMaxSeqRsp> SaveMaxSeqRsp_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// IpPort

// optional string host = 1;
inline void IpPort::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IpPort::host() const {
  // @@protoc_insertion_point(field_get:zproto.IpPort.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IpPort::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.IpPort.host)
}
inline void IpPort::set_host(const char* value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.IpPort.host)
}
inline void IpPort::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.IpPort.host)
}
inline ::std::string* IpPort::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:zproto.IpPort.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IpPort::release_host() {
  // @@protoc_insertion_point(field_release:zproto.IpPort.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IpPort::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:zproto.IpPort.host)
}

// optional uint32 port = 2;
inline void IpPort::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 IpPort::port() const {
  // @@protoc_insertion_point(field_get:zproto.IpPort.port)
  return port_;
}
inline void IpPort::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:zproto.IpPort.port)
}

inline const IpPort* IpPort::internal_default_instance() {
  return &IpPort_default_instance_.get();
}
// -------------------------------------------------------------------

// Range

// optional uint32 id = 1;
inline void Range::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Range::id() const {
  // @@protoc_insertion_point(field_get:zproto.Range.id)
  return id_;
}
inline void Range::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:zproto.Range.id)
}

// optional uint32 size = 2;
inline void Range::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 Range::size() const {
  // @@protoc_insertion_point(field_get:zproto.Range.size)
  return size_;
}
inline void Range::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:zproto.Range.size)
}

inline const Range* Range::internal_default_instance() {
  return &Range_default_instance_.get();
}
// -------------------------------------------------------------------

// AllocSvrEntry

// optional string alloc_name = 1;
inline void AllocSvrEntry::clear_alloc_name() {
  alloc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllocSvrEntry::alloc_name() const {
  // @@protoc_insertion_point(field_get:zproto.AllocSvrEntry.alloc_name)
  return alloc_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllocSvrEntry::set_alloc_name(const ::std::string& value) {
  
  alloc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.AllocSvrEntry.alloc_name)
}
inline void AllocSvrEntry::set_alloc_name(const char* value) {
  
  alloc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.AllocSvrEntry.alloc_name)
}
inline void AllocSvrEntry::set_alloc_name(const char* value, size_t size) {
  
  alloc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.AllocSvrEntry.alloc_name)
}
inline ::std::string* AllocSvrEntry::mutable_alloc_name() {
  
  // @@protoc_insertion_point(field_mutable:zproto.AllocSvrEntry.alloc_name)
  return alloc_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllocSvrEntry::release_alloc_name() {
  // @@protoc_insertion_point(field_release:zproto.AllocSvrEntry.alloc_name)
  
  return alloc_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllocSvrEntry::set_allocated_alloc_name(::std::string* alloc_name) {
  if (alloc_name != NULL) {
    
  } else {
    
  }
  alloc_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alloc_name);
  // @@protoc_insertion_point(field_set_allocated:zproto.AllocSvrEntry.alloc_name)
}

// optional .zproto.IpPort addr = 2;
inline bool AllocSvrEntry::has_addr() const {
  return this != internal_default_instance() && addr_ != NULL;
}
inline void AllocSvrEntry::clear_addr() {
  if (GetArenaNoVirtual() == NULL && addr_ != NULL) delete addr_;
  addr_ = NULL;
}
inline const ::zproto::IpPort& AllocSvrEntry::addr() const {
  // @@protoc_insertion_point(field_get:zproto.AllocSvrEntry.addr)
  return addr_ != NULL ? *addr_
                         : *::zproto::IpPort::internal_default_instance();
}
inline ::zproto::IpPort* AllocSvrEntry::mutable_addr() {
  
  if (addr_ == NULL) {
    addr_ = new ::zproto::IpPort;
  }
  // @@protoc_insertion_point(field_mutable:zproto.AllocSvrEntry.addr)
  return addr_;
}
inline ::zproto::IpPort* AllocSvrEntry::release_addr() {
  // @@protoc_insertion_point(field_release:zproto.AllocSvrEntry.addr)
  
  ::zproto::IpPort* temp = addr_;
  addr_ = NULL;
  return temp;
}
inline void AllocSvrEntry::set_allocated_addr(::zproto::IpPort* addr) {
  delete addr_;
  addr_ = addr;
  if (addr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.AllocSvrEntry.addr)
}

// repeated .zproto.Range ranges = 3;
inline int AllocSvrEntry::ranges_size() const {
  return ranges_.size();
}
inline void AllocSvrEntry::clear_ranges() {
  ranges_.Clear();
}
inline const ::zproto::Range& AllocSvrEntry::ranges(int index) const {
  // @@protoc_insertion_point(field_get:zproto.AllocSvrEntry.ranges)
  return ranges_.Get(index);
}
inline ::zproto::Range* AllocSvrEntry::mutable_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.AllocSvrEntry.ranges)
  return ranges_.Mutable(index);
}
inline ::zproto::Range* AllocSvrEntry::add_ranges() {
  // @@protoc_insertion_point(field_add:zproto.AllocSvrEntry.ranges)
  return ranges_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::Range >*
AllocSvrEntry::mutable_ranges() {
  // @@protoc_insertion_point(field_mutable_list:zproto.AllocSvrEntry.ranges)
  return &ranges_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::Range >&
AllocSvrEntry::ranges() const {
  // @@protoc_insertion_point(field_list:zproto.AllocSvrEntry.ranges)
  return ranges_;
}

inline const AllocSvrEntry* AllocSvrEntry::internal_default_instance() {
  return &AllocSvrEntry_default_instance_.get();
}
// -------------------------------------------------------------------

// SetEntry

// optional string set_name = 1;
inline void SetEntry::clear_set_name() {
  set_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetEntry::set_name() const {
  // @@protoc_insertion_point(field_get:zproto.SetEntry.set_name)
  return set_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetEntry::set_set_name(const ::std::string& value) {
  
  set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.SetEntry.set_name)
}
inline void SetEntry::set_set_name(const char* value) {
  
  set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.SetEntry.set_name)
}
inline void SetEntry::set_set_name(const char* value, size_t size) {
  
  set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.SetEntry.set_name)
}
inline ::std::string* SetEntry::mutable_set_name() {
  
  // @@protoc_insertion_point(field_mutable:zproto.SetEntry.set_name)
  return set_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetEntry::release_set_name() {
  // @@protoc_insertion_point(field_release:zproto.SetEntry.set_name)
  
  return set_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetEntry::set_allocated_set_name(::std::string* set_name) {
  if (set_name != NULL) {
    
  } else {
    
  }
  set_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), set_name);
  // @@protoc_insertion_point(field_set_allocated:zproto.SetEntry.set_name)
}

// repeated .zproto.AllocSvrEntry allocs = 2;
inline int SetEntry::allocs_size() const {
  return allocs_.size();
}
inline void SetEntry::clear_allocs() {
  allocs_.Clear();
}
inline const ::zproto::AllocSvrEntry& SetEntry::allocs(int index) const {
  // @@protoc_insertion_point(field_get:zproto.SetEntry.allocs)
  return allocs_.Get(index);
}
inline ::zproto::AllocSvrEntry* SetEntry::mutable_allocs(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.SetEntry.allocs)
  return allocs_.Mutable(index);
}
inline ::zproto::AllocSvrEntry* SetEntry::add_allocs() {
  // @@protoc_insertion_point(field_add:zproto.SetEntry.allocs)
  return allocs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::AllocSvrEntry >*
SetEntry::mutable_allocs() {
  // @@protoc_insertion_point(field_mutable_list:zproto.SetEntry.allocs)
  return &allocs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::AllocSvrEntry >&
SetEntry::allocs() const {
  // @@protoc_insertion_point(field_list:zproto.SetEntry.allocs)
  return allocs_;
}

// optional .zproto.Range range = 3;
inline bool SetEntry::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
inline void SetEntry::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
inline const ::zproto::Range& SetEntry::range() const {
  // @@protoc_insertion_point(field_get:zproto.SetEntry.range)
  return range_ != NULL ? *range_
                         : *::zproto::Range::internal_default_instance();
}
inline ::zproto::Range* SetEntry::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::zproto::Range;
  }
  // @@protoc_insertion_point(field_mutable:zproto.SetEntry.range)
  return range_;
}
inline ::zproto::Range* SetEntry::release_range() {
  // @@protoc_insertion_point(field_release:zproto.SetEntry.range)
  
  ::zproto::Range* temp = range_;
  range_ = NULL;
  return temp;
}
inline void SetEntry::set_allocated_range(::zproto::Range* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.SetEntry.range)
}

inline const SetEntry* SetEntry::internal_default_instance() {
  return &SetEntry_default_instance_.get();
}
// -------------------------------------------------------------------

// Router

// optional uint32 version = 1;
inline void Router::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 Router::version() const {
  // @@protoc_insertion_point(field_get:zproto.Router.version)
  return version_;
}
inline void Router::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:zproto.Router.version)
}

// repeated .zproto.SetEntry sets = 2;
inline int Router::sets_size() const {
  return sets_.size();
}
inline void Router::clear_sets() {
  sets_.Clear();
}
inline const ::zproto::SetEntry& Router::sets(int index) const {
  // @@protoc_insertion_point(field_get:zproto.Router.sets)
  return sets_.Get(index);
}
inline ::zproto::SetEntry* Router::mutable_sets(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.Router.sets)
  return sets_.Mutable(index);
}
inline ::zproto::SetEntry* Router::add_sets() {
  // @@protoc_insertion_point(field_add:zproto.Router.sets)
  return sets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::SetEntry >*
Router::mutable_sets() {
  // @@protoc_insertion_point(field_mutable_list:zproto.Router.sets)
  return &sets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::SetEntry >&
Router::sets() const {
  // @@protoc_insertion_point(field_list:zproto.Router.sets)
  return sets_;
}

inline const Router* Router::internal_default_instance() {
  return &Router_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdateRouteTableReq

// optional .zproto.Router router = 1;
inline bool UpdateRouteTableReq::has_router() const {
  return this != internal_default_instance() && router_ != NULL;
}
inline void UpdateRouteTableReq::clear_router() {
  if (GetArenaNoVirtual() == NULL && router_ != NULL) delete router_;
  router_ = NULL;
}
inline const ::zproto::Router& UpdateRouteTableReq::router() const {
  // @@protoc_insertion_point(field_get:zproto.UpdateRouteTableReq.router)
  return router_ != NULL ? *router_
                         : *::zproto::Router::internal_default_instance();
}
inline ::zproto::Router* UpdateRouteTableReq::mutable_router() {
  
  if (router_ == NULL) {
    router_ = new ::zproto::Router;
  }
  // @@protoc_insertion_point(field_mutable:zproto.UpdateRouteTableReq.router)
  return router_;
}
inline ::zproto::Router* UpdateRouteTableReq::release_router() {
  // @@protoc_insertion_point(field_release:zproto.UpdateRouteTableReq.router)
  
  ::zproto::Router* temp = router_;
  router_ = NULL;
  return temp;
}
inline void UpdateRouteTableReq::set_allocated_router(::zproto::Router* router) {
  delete router_;
  router_ = router;
  if (router) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.UpdateRouteTableReq.router)
}

inline const UpdateRouteTableReq* UpdateRouteTableReq::internal_default_instance() {
  return &UpdateRouteTableReq_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdateRouteTableRsp

inline const UpdateRouteTableRsp* UpdateRouteTableRsp::internal_default_instance() {
  return &UpdateRouteTableRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// GetRouteTableReq

inline const GetRouteTableReq* GetRouteTableReq::internal_default_instance() {
  return &GetRouteTableReq_default_instance_.get();
}
// -------------------------------------------------------------------

// GetRouteTableRsp

// optional .zproto.Router router = 1;
inline bool GetRouteTableRsp::has_router() const {
  return this != internal_default_instance() && router_ != NULL;
}
inline void GetRouteTableRsp::clear_router() {
  if (GetArenaNoVirtual() == NULL && router_ != NULL) delete router_;
  router_ = NULL;
}
inline const ::zproto::Router& GetRouteTableRsp::router() const {
  // @@protoc_insertion_point(field_get:zproto.GetRouteTableRsp.router)
  return router_ != NULL ? *router_
                         : *::zproto::Router::internal_default_instance();
}
inline ::zproto::Router* GetRouteTableRsp::mutable_router() {
  
  if (router_ == NULL) {
    router_ = new ::zproto::Router;
  }
  // @@protoc_insertion_point(field_mutable:zproto.GetRouteTableRsp.router)
  return router_;
}
inline ::zproto::Router* GetRouteTableRsp::release_router() {
  // @@protoc_insertion_point(field_release:zproto.GetRouteTableRsp.router)
  
  ::zproto::Router* temp = router_;
  router_ = NULL;
  return temp;
}
inline void GetRouteTableRsp::set_allocated_router(::zproto::Router* router) {
  delete router_;
  router_ = router;
  if (router) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.GetRouteTableRsp.router)
}

inline const GetRouteTableRsp* GetRouteTableRsp::internal_default_instance() {
  return &GetRouteTableRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// FetchNextSequenceReq

// optional uint32 id = 1;
inline void FetchNextSequenceReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 FetchNextSequenceReq::id() const {
  // @@protoc_insertion_point(field_get:zproto.FetchNextSequenceReq.id)
  return id_;
}
inline void FetchNextSequenceReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:zproto.FetchNextSequenceReq.id)
}

// optional uint32 version = 2;
inline void FetchNextSequenceReq::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 FetchNextSequenceReq::version() const {
  // @@protoc_insertion_point(field_get:zproto.FetchNextSequenceReq.version)
  return version_;
}
inline void FetchNextSequenceReq::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:zproto.FetchNextSequenceReq.version)
}

inline const FetchNextSequenceReq* FetchNextSequenceReq::internal_default_instance() {
  return &FetchNextSequenceReq_default_instance_.get();
}
// -------------------------------------------------------------------

// GetCurrentSequenceReq

// optional uint32 id = 1;
inline void GetCurrentSequenceReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 GetCurrentSequenceReq::id() const {
  // @@protoc_insertion_point(field_get:zproto.GetCurrentSequenceReq.id)
  return id_;
}
inline void GetCurrentSequenceReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:zproto.GetCurrentSequenceReq.id)
}

// optional uint32 version = 2;
inline void GetCurrentSequenceReq::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 GetCurrentSequenceReq::version() const {
  // @@protoc_insertion_point(field_get:zproto.GetCurrentSequenceReq.version)
  return version_;
}
inline void GetCurrentSequenceReq::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:zproto.GetCurrentSequenceReq.version)
}

inline const GetCurrentSequenceReq* GetCurrentSequenceReq::internal_default_instance() {
  return &GetCurrentSequenceReq_default_instance_.get();
}
// -------------------------------------------------------------------

// SequenceRsp

// optional uint64 sequence = 2;
inline void SequenceRsp::clear_sequence() {
  sequence_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SequenceRsp::sequence() const {
  // @@protoc_insertion_point(field_get:zproto.SequenceRsp.sequence)
  return sequence_;
}
inline void SequenceRsp::set_sequence(::google::protobuf::uint64 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:zproto.SequenceRsp.sequence)
}

// optional .zproto.Router router = 3;
inline bool SequenceRsp::has_router() const {
  return this != internal_default_instance() && router_ != NULL;
}
inline void SequenceRsp::clear_router() {
  if (GetArenaNoVirtual() == NULL && router_ != NULL) delete router_;
  router_ = NULL;
}
inline const ::zproto::Router& SequenceRsp::router() const {
  // @@protoc_insertion_point(field_get:zproto.SequenceRsp.router)
  return router_ != NULL ? *router_
                         : *::zproto::Router::internal_default_instance();
}
inline ::zproto::Router* SequenceRsp::mutable_router() {
  
  if (router_ == NULL) {
    router_ = new ::zproto::Router;
  }
  // @@protoc_insertion_point(field_mutable:zproto.SequenceRsp.router)
  return router_;
}
inline ::zproto::Router* SequenceRsp::release_router() {
  // @@protoc_insertion_point(field_release:zproto.SequenceRsp.router)
  
  ::zproto::Router* temp = router_;
  router_ = NULL;
  return temp;
}
inline void SequenceRsp::set_allocated_router(::zproto::Router* router) {
  delete router_;
  router_ = router;
  if (router) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.SequenceRsp.router)
}

inline const SequenceRsp* SequenceRsp::internal_default_instance() {
  return &SequenceRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// FetchNextSequenceListReq

// repeated uint32 id_list = 1;
inline int FetchNextSequenceListReq::id_list_size() const {
  return id_list_.size();
}
inline void FetchNextSequenceListReq::clear_id_list() {
  id_list_.Clear();
}
inline ::google::protobuf::uint32 FetchNextSequenceListReq::id_list(int index) const {
  // @@protoc_insertion_point(field_get:zproto.FetchNextSequenceListReq.id_list)
  return id_list_.Get(index);
}
inline void FetchNextSequenceListReq::set_id_list(int index, ::google::protobuf::uint32 value) {
  id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.FetchNextSequenceListReq.id_list)
}
inline void FetchNextSequenceListReq::add_id_list(::google::protobuf::uint32 value) {
  id_list_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.FetchNextSequenceListReq.id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FetchNextSequenceListReq::id_list() const {
  // @@protoc_insertion_point(field_list:zproto.FetchNextSequenceListReq.id_list)
  return id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FetchNextSequenceListReq::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:zproto.FetchNextSequenceListReq.id_list)
  return &id_list_;
}

inline const FetchNextSequenceListReq* FetchNextSequenceListReq::internal_default_instance() {
  return &FetchNextSequenceListReq_default_instance_.get();
}
// -------------------------------------------------------------------

// GetCurrentSequenceListReq

// repeated uint32 id_list = 1;
inline int GetCurrentSequenceListReq::id_list_size() const {
  return id_list_.size();
}
inline void GetCurrentSequenceListReq::clear_id_list() {
  id_list_.Clear();
}
inline ::google::protobuf::uint32 GetCurrentSequenceListReq::id_list(int index) const {
  // @@protoc_insertion_point(field_get:zproto.GetCurrentSequenceListReq.id_list)
  return id_list_.Get(index);
}
inline void GetCurrentSequenceListReq::set_id_list(int index, ::google::protobuf::uint32 value) {
  id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.GetCurrentSequenceListReq.id_list)
}
inline void GetCurrentSequenceListReq::add_id_list(::google::protobuf::uint32 value) {
  id_list_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.GetCurrentSequenceListReq.id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetCurrentSequenceListReq::id_list() const {
  // @@protoc_insertion_point(field_list:zproto.GetCurrentSequenceListReq.id_list)
  return id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetCurrentSequenceListReq::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:zproto.GetCurrentSequenceListReq.id_list)
  return &id_list_;
}

inline const GetCurrentSequenceListReq* GetCurrentSequenceListReq::internal_default_instance() {
  return &GetCurrentSequenceListReq_default_instance_.get();
}
// -------------------------------------------------------------------

// IdSeq

// optional uint32 id = 1;
inline void IdSeq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 IdSeq::id() const {
  // @@protoc_insertion_point(field_get:zproto.IdSeq.id)
  return id_;
}
inline void IdSeq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:zproto.IdSeq.id)
}

// optional uint64 sequence = 2;
inline void IdSeq::clear_sequence() {
  sequence_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdSeq::sequence() const {
  // @@protoc_insertion_point(field_get:zproto.IdSeq.sequence)
  return sequence_;
}
inline void IdSeq::set_sequence(::google::protobuf::uint64 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:zproto.IdSeq.sequence)
}

inline const IdSeq* IdSeq::internal_default_instance() {
  return &IdSeq_default_instance_.get();
}
// -------------------------------------------------------------------

// SequenceListRsp

// repeated .zproto.IdSeq sequence_list = 1;
inline int SequenceListRsp::sequence_list_size() const {
  return sequence_list_.size();
}
inline void SequenceListRsp::clear_sequence_list() {
  sequence_list_.Clear();
}
inline const ::zproto::IdSeq& SequenceListRsp::sequence_list(int index) const {
  // @@protoc_insertion_point(field_get:zproto.SequenceListRsp.sequence_list)
  return sequence_list_.Get(index);
}
inline ::zproto::IdSeq* SequenceListRsp::mutable_sequence_list(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.SequenceListRsp.sequence_list)
  return sequence_list_.Mutable(index);
}
inline ::zproto::IdSeq* SequenceListRsp::add_sequence_list() {
  // @@protoc_insertion_point(field_add:zproto.SequenceListRsp.sequence_list)
  return sequence_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::IdSeq >*
SequenceListRsp::mutable_sequence_list() {
  // @@protoc_insertion_point(field_mutable_list:zproto.SequenceListRsp.sequence_list)
  return &sequence_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::IdSeq >&
SequenceListRsp::sequence_list() const {
  // @@protoc_insertion_point(field_list:zproto.SequenceListRsp.sequence_list)
  return sequence_list_;
}

inline const SequenceListRsp* SequenceListRsp::internal_default_instance() {
  return &SequenceListRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// LoadMaxSeqsDataReq

inline const LoadMaxSeqsDataReq* LoadMaxSeqsDataReq::internal_default_instance() {
  return &LoadMaxSeqsDataReq_default_instance_.get();
}
// -------------------------------------------------------------------

// LoadMaxSeqsDataRsp

// optional bytes max_seqs = 1;
inline void LoadMaxSeqsDataRsp::clear_max_seqs() {
  max_seqs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoadMaxSeqsDataRsp::max_seqs() const {
  // @@protoc_insertion_point(field_get:zproto.LoadMaxSeqsDataRsp.max_seqs)
  return max_seqs_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoadMaxSeqsDataRsp::set_max_seqs(const ::std::string& value) {
  
  max_seqs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.LoadMaxSeqsDataRsp.max_seqs)
}
inline void LoadMaxSeqsDataRsp::set_max_seqs(const char* value) {
  
  max_seqs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.LoadMaxSeqsDataRsp.max_seqs)
}
inline void LoadMaxSeqsDataRsp::set_max_seqs(const void* value, size_t size) {
  
  max_seqs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.LoadMaxSeqsDataRsp.max_seqs)
}
inline ::std::string* LoadMaxSeqsDataRsp::mutable_max_seqs() {
  
  // @@protoc_insertion_point(field_mutable:zproto.LoadMaxSeqsDataRsp.max_seqs)
  return max_seqs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoadMaxSeqsDataRsp::release_max_seqs() {
  // @@protoc_insertion_point(field_release:zproto.LoadMaxSeqsDataRsp.max_seqs)
  
  return max_seqs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoadMaxSeqsDataRsp::set_allocated_max_seqs(::std::string* max_seqs) {
  if (max_seqs != NULL) {
    
  } else {
    
  }
  max_seqs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), max_seqs);
  // @@protoc_insertion_point(field_set_allocated:zproto.LoadMaxSeqsDataRsp.max_seqs)
}

inline const LoadMaxSeqsDataRsp* LoadMaxSeqsDataRsp::internal_default_instance() {
  return &LoadMaxSeqsDataRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// SaveMaxSeqReq

// optional uint32 section_id = 3;
inline void SaveMaxSeqReq::clear_section_id() {
  section_id_ = 0u;
}
inline ::google::protobuf::uint32 SaveMaxSeqReq::section_id() const {
  // @@protoc_insertion_point(field_get:zproto.SaveMaxSeqReq.section_id)
  return section_id_;
}
inline void SaveMaxSeqReq::set_section_id(::google::protobuf::uint32 value) {
  
  section_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.SaveMaxSeqReq.section_id)
}

// optional uint64 max_seq = 4;
inline void SaveMaxSeqReq::clear_max_seq() {
  max_seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SaveMaxSeqReq::max_seq() const {
  // @@protoc_insertion_point(field_get:zproto.SaveMaxSeqReq.max_seq)
  return max_seq_;
}
inline void SaveMaxSeqReq::set_max_seq(::google::protobuf::uint64 value) {
  
  max_seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.SaveMaxSeqReq.max_seq)
}

inline const SaveMaxSeqReq* SaveMaxSeqReq::internal_default_instance() {
  return &SaveMaxSeqReq_default_instance_.get();
}
// -------------------------------------------------------------------

// SaveMaxSeqRsp

// optional uint64 last_max_seq = 1;
inline void SaveMaxSeqRsp::clear_last_max_seq() {
  last_max_seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SaveMaxSeqRsp::last_max_seq() const {
  // @@protoc_insertion_point(field_get:zproto.SaveMaxSeqRsp.last_max_seq)
  return last_max_seq_;
}
inline void SaveMaxSeqRsp::set_last_max_seq(::google::protobuf::uint64 value) {
  
  last_max_seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.SaveMaxSeqRsp.last_max_seq)
}

inline const SaveMaxSeqRsp* SaveMaxSeqRsp::internal_default_instance() {
  return &SaveMaxSeqRsp_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_seqsvr_2eproto__INCLUDED
